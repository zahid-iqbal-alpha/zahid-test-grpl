# Default values for myapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


env: {}
# configuration for grapple ApplicationSet (gras)
gras-deploy:
  enabled: true
  gras: {}
  grapi:
    # beimagetag: "v0.130"
    discoveredrepos: true
    ingress: true
    ssl: true
    sslissuer: letsencrypt-grapple-demo
    initContainers:
      - name: test
        spec:
          name: init-db
          image: busybox:1.28
          command: ['sh', '-c', "if ! test -f /data/db.json; then wget -O /data/db.json https://raw.githubusercontent.com/grapple-solutions/grapple-test-data/main/classicmodelsid/db.json; chmod 777 /data/db.json; fi"]
    volumes:
      - name: data
        emptyDir: {}
        # persistentVolumeClaim: 
        #   claimName: grapi-dbfile
    volumeMounts:
      - name: data
        mountPath: /data
    datasources:
      - name: "db"
        spec:
          memory:
            connector: "memory"
            name: "db"
            file: "/data/db.json"
            localStorage: "db"
    models:
      - name: "customers"
        spec:
          name: customers
          base: Entity
          properties:
            id:
              type: number
              id: true
              required: true
              generated: true
            customerName:
              type: string
            customerLastname:
              type: string
            contactFirstName:
              type: string
            phone:
              type: string
            addressLine1:
              type: string
            addressLine2:
              type: string
            city:
              type: string
            state:
              type: string
            postalCode:
              type: string
            country:
              type: string
            creditLimit:
              type: number
      - name: "employees"
        spec:
          name: employees
          base: Entity
          properties:
            id:
              type: number
              id: true
              required: true
              generated: true
            lastName:
              type: string
            firstName:
              type: string
            extension:
              type: string
            email:
              type: string
            officesId:
              type: string
            reportsTo:
              type: number
            jobTitle:
              type: string
            state:
              type: string
            postalCode:
              type: string
            country:
              type: string
            creditLimit:
              type: number
    relations:
      - name: "employees"
        spec:
          relationName: "employees"
          sourceModel: "Customers"
          destinationModel: "Employees"
          foreignKeyName: "employeesId"
          relationType: "belongsTo"
          registerInclusionResolver: true
    restcruds:
      - name: "restcrud"
        spec:
          datasource: "db"
  gruim:
    # uiimagetag: "0.1.38"
    ssl: true
    sslissuer: letsencrypt-grapple-demo
    style: '{"colors":{"primary":{"DEFAULT":"#34344A","fg":"#fff"},"accent":{"DEFAULT":"#CC5A71","fg":"#fff"}}}'
    config: ""
    additionalpackages: ""
replicaCount: 1
image:
  repository: app
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
imagetest:
  repository: apptest
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
podAnnotations: {}
podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80
ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
